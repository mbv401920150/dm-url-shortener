name: Azure Deploy

on:
  push:
    branches:
      - main
    paths: # Filter just for the PR created on the specific folder
      - infrastructure/**
  pull_request:
    branches: # Just run the pipeline when the changes are from the branch `main`
      - main 
    paths: # Filter just for the PR created on the specific folder
      - infrastructure/**
  workflow_dispatch: # Manual trigger

permissions: 
  id-token: write
  contents: read

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: Development
    steps:
      # Base action
      - uses: actions/checkout@v4
      
      # Login to Azure
      - name: Azure login
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          
      # Run the Azure CLI to create the Resource Group
      - uses: Azure/CLI@v2
        with:
          inlineScript: |
            #!/bin/bash
            az group create --name ${{ vars.RESOURCE_GROUP_NAME }} --location ${{ vars.RESOURCE_GROUP_LOCATION }}
            echo "Azure resource group created"
      
      # Run the Bicep script to deploy the IaC into Azure
      - name: Deploy
        uses: azure/arm-deploy@v2
        with:
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          template: ./infrastructure/main.bicep
          
  deploy-stg:
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment: Staging
    steps:
      # Base action
      - uses: actions/checkout@v4
      
      # Login to Azure
      - name: Azure login
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      # Run the Azure CLI to create the Resource Group
      - uses: Azure/CLI@v2
        with:
          inlineScript: |
            #!/bin/bash
            az group create --name ${{ vars.RESOURCE_GROUP_NAME }} --location ${{ vars.RESOURCE_GROUP_LOCATION }}
            echo "Azure resource group created"
      
      # Run the Bicep script to deploy the IaC into Azure
      - name: Deploy
        uses: azure/arm-deploy@v2
        with:
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          template: ./infrastructure/main.bicep
          
  deploy-prd:
    runs-on: ubuntu-latest
    needs: deploy-stg
    if: github.event_name == 'push' && github.ref == 'refs/head/main' # Just run the prod step, just when the changes already merged into the main branch
    environment: Production
    steps:
      # Base action
      - uses: actions/checkout@v4
      
      # Login to Azure
      - name: Azure login
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      # Run the Azure CLI to create the Resource Group
      - uses: Azure/CLI@v2
        with:
          inlineScript: |
            #!/bin/bash
            az group create --name ${{ vars.RESOURCE_GROUP_NAME }} --location ${{ vars.RESOURCE_GROUP_LOCATION }}
            echo "Azure resource group created"
      
      # Run the Bicep script to deploy the IaC into Azure
      - name: Deploy
        uses: azure/arm-deploy@v2
        with:
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          template: ./infrastructure/main.bicep
          parameters: pgSqlPassword=${{ secrets.PG_SQL_PASSWORD }}